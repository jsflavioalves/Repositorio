<?php/** * Connection - Conexão e execução de instruções no banco de dados * @package reports * @author Thiago Segato Antunes * @version 1.0 * @copyright atitudeweb * @license http://opensource.org/licenses/gpl-3.0.html GPL General Public License */class PHPIreport {	public static $OUTPUT_PDF = 'PDF';	public static $OUTPUT_XLS = 'XLS';		private $config;	private $params;	private $relName;	private $popup;	private $type;		/**	 * Inicializa com a configuração default para o relatório, realiza a verificação do plugin java	 *	 * @param string $reportName - Nome do relatorio.jasper	 * @param string $relName - Nome do relatório a fazer download	 * @param array $params - Parâmetros do relatório	 * @param boolean $popup - true para popup e false para download	 * @return boolean	 */	public function PHPIreport($reportName=null, $relName='relatorio', $params=array(), $popup=false, $type='PDF'){		if(!file_exists('php.jar')){			echo 'Não foi possível encontrar plugin java do gerador de relatórios!';					exit;		}				$this->config = array();						$this->config['con']['driver'] = Config::DEFAULT_CONNECTION;		$this->config['con']['host'] = Config::POSTGRES_HOST;		$this->config['con']['port'] = Config::POSTGRES_PORT;		$this->config['con']['base'] = Config::POSTGRES_NAME;		$this->config['con']['user'] = Config::POSTGRES_USER;		$this->config['con']['pass'] = Config::POSTGRES_PASS;		$this->setReportName($reportName);				$this->setType($type);				$this->params = array();		$this->setParams($params);		$this->relName = $relName;		$this->popup = $popup;	}		/**	 * Define o tipo de saída do relatório	 *	 * @param string $value - Nome do realtório a fazer download	 * @return void	 */	public function setType($type){		$this->config['type'] = $type;		$this->type = $type;			}	 		/**	 * Define o nome do relatório a fazer download	 *	 * @param string $value - Nome do realtório a fazer download	 * @return void	 */	public function setRelName($value){		$this->relName = $value;	}		/**	 * Adquire o nome do relatório	 *	 * @return string	 */	public function getRelName(){		return $this->relName;	}		/**	 * Define os parâmetros do relatório	 *	 * @param array $params - Parâmetros do relatório	 * @return void	 */	public function setParams($params){		if(is_array($params)){			$this->params = array();			foreach($params as $key=>$value){				$this->params[$key] = base64_encode($value);			}		}		}		/**	 * Adquire o nome do relatório	 *	 * @return string	 */	public function getParams(){		return $this->$params;	}			/**	 * Define a conexão com banco de dados	 *	 * @param string $host - Host do servidor	 * @param string $base - Nome do banco de dados	 * @param string $user - Usuário do banco de dados	 * @param string $pass - Senha do banco de dados	 * @param string $driver - Driver de conexão	 * @param string $port - Porta do host do servidor	 * @return void	 */	public function setConnection($host='127.0.0.1', $base='atitudeweb', $user='postgres', $pass='123456789', $driver='postgres', $port=5432){		$this->config['con']['driver'] = $driver;		$this->config['con']['host'] = $host;		$this->config['con']['port'] = $port;		$this->config['con']['base'] = $base;		$this->config['con']['user'] = $user;		$this->config['con']['pass'] = $pass;	}		/**	 * Adquire a configuração da conexão com o banco de dados	 *	 * @return array	 */	public function getConnection(){		return $this->config['con'];	}	/**	 * Define o nome do relatório jasper	 *	 * @param string $value - Nome do relatório jasper	 * @return void	 */	public function setReportName($value='report1.jasper'){		$this->config['rel'] = $value;		}		/**	 * Adquire o nome do relatório jasper	 *	 * @return string	 */	public function getReportName(){		return $this->config['rel'];	}	/**	 * Gera o relatório	 *	 * @param boolean $debug - Impressão do comando executado	 * @return void	 */	public function make($debug=true){						$arguments = array();		$arguments['config'] = $this->config;		$arguments['params'] = $this->params;		$str = json_encode($arguments);		$str = addslashes($str);				if($debug){			echo "<pre>"; print_r($arguments); echo "<br><br>Command:<br>".$str."</pre>";			exit;		}				//Para verificar errro utilize desta forma		//$ret = `java -jar php.jar "$str" 2>&1`;		//echo $ret; exit;				$ret = `java -jar php.jar "$str"`;				$extension = '';		$header = '';		if($this->type == self::$OUTPUT_PDF){			$extension = '.pdf';			$header = 'Content-Type: application/pdf';		}		elseif($this->type == self::$OUTPUT_XLS){			$extension = '.xls';			$header = 'Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';		}				header($header);				if($this->popup){			header('Content-Disposition: inline; filename="'.$this->relName.$extension.'"');		}		else{			header('Content-Disposition: attachment; filename="'.$this->relName.$extension.'"');		}		header('Pragma: no-cache');		echo base64_decode($ret);		exit;	}		/**	 * Gera um relatório ireport	 * 	 * @param string $reportName - Nome do arquivo jasper	 * @param string $relName - Nome do download em pdf	 * @param array $params - Parametros do relatório	 * @param boolean $popup - Abrir em popup ou fazer download do relatório	 * @return string	 * @author Evandir	 */	public static function show($reportName, $relName, $params=array(), $popup=false, $type='PDF'){		$hash = serialize($params);		$hash = base64_encode($hash);						echo '		<script type="text/javascript">			var janela = window.open("reports/?reportName='.$reportName.'&relName='.$relName.'&popup='.$popup.'&type='.$type.'&hash='.$hash.'", "_blank", "dependent=yes, menubar=no, toolbar=no, location=no, status=no, scrollbars=yes, resizable=yes");			janela.focus();		</script>		';					}}?>